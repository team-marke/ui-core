//
// Checkbox component styles
//

@use '../../design-tokens' as mkui;
@use '../helper-text' as helper-text;

$input-width:                  1em !default;
$min-height:                   mkui.$font-size-base * mkui.$line-height-base !default;
$padding-start:                $input-width + .5em !default;
$margin-bottom:                .125rem !default;
$cursor:                       pointer !default;
$label-color:                  null !default;
$label-cursor:                 $cursor !default;
$transition:                   null !default;

$input-active-filter:          brightness(90%) !default;

$input-bg:                     mkui.$input-bg !default;
$input-border:                 1px solid rgba(mkui.$black, .25) !default;
$input-border-radius:          .25em !default;
$input-focus-border:           mkui.$input-focus-border-color !default;
$input-focus-box-shadow:       mkui.$input-btn-focus-box-shadow !default;

$input-checked-color:          mkui.$component-active-color !default;
$input-checked-bg-color:       mkui.$component-active-bg !default;
$input-checked-border-color:   $input-checked-bg-color !default;
$input-checked-bg-image:       url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$input-checked-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/></svg>") !default;

$input-indeterminate-color:          mkui.$component-active-color !default;
$input-indeterminate-bg-color:       mkui.$component-active-bg !default;
$input-indeterminate-border-color:   $input-indeterminate-bg-color !default;
$input-indeterminate-bg-image:       url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$input-indeterminate-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/></svg>") !default;

$input-disabled-opacity:        .5 !default;
$label-disabled-opacity:        $input-disabled-opacity !default;
$btn-check-disabled-opacity:    mkui.$btn-disabled-opacity !default;

$inline-margin-end:    1rem !default;

.form-control--checkbox {
  display: block;
  min-height: $min-height;
  padding-left: $padding-start;
  margin-bottom: $margin-bottom;
  position: relative;

  .checkbox {
    float: left;
    margin-left: $padding-start * -1;
  }
}

.checkbox {
  width: $input-width;
  height: $input-width;
  margin-top: (mkui.$line-height-base - $input-width) * .5; // line-height minus check height
  vertical-align: top;
  background-color: $input-bg;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  border: $input-border;
  cursor: pointer;
  appearance: none;
  color-adjust: exact; // Keep themed appearance for print
  @include mkui.transition($transition);

  &[type="checkbox"] {
    @include mkui.border-radius($input-border-radius);
  }

  &:active {
    filter: $input-active-filter;
  }

  &:focus {
    border-color: $input-focus-border;
    outline: 0;
    box-shadow: $input-focus-box-shadow;
  }

  &:checked {
    background-color: $input-checked-bg-color;
    border-color: $input-checked-border-color;

    &[type="checkbox"] {
      @if mkui.$enable-gradients {
        background-image: mkui.escape-svg($input-checked-bg-image), var(--#{$variable-prefix}gradient);
      } @else {
        background-image: mkui.escape-svg($input-checked-bg-image);
      }
    }
  }

  &[type="checkbox"]:indeterminate {
    background-color: $input-indeterminate-bg-color;
    border-color: $input-indeterminate-border-color;

    @if mkui.$enable-gradients {
      background-image: mkui.escape-svg($input-indeterminate-bg-image), var(--#{$variable-prefix}gradient);
    } @else {
      background-image: mkui.escape-svg($input-indeterminate-bg-image);
    }
  }

  &:disabled {
    pointer-events: none;
    filter: none;
    opacity: $input-disabled-opacity;
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .input-label--checkbox {
      pointer-events: none;
      opacity: $label-disabled-opacity;
    }
  }
}

.input-label--checkbox {
  color: $label-color;
  cursor: $label-cursor;
  margin-bottom: 0;
}

//
// Switch
//

.form-switch {
  padding-left: mkui.$form-switch-padding-start;

  .checkbox__input {
    width: mkui.$form-switch-width;
    margin-left: mkui.$form-switch-padding-start * -1;
    background-image: mkui.escape-svg(mkui.$form-switch-bg-image);
    background-position: left center;
    @include mkui.border-radius(mkui.$form-switch-border-radius);
    @include mkui.transition(mkui.$form-switch-transition);

    &:focus {
      background-image: mkui.escape-svg(mkui.$form-switch-focus-bg-image);
    }

    &:checked {
      background-position: mkui.$form-switch-checked-bg-position;

      @if mkui.$enable-gradients {
        background-image: mkui.escape-svg(mkui.$form-switch-checked-bg-image), var(--#{$variable-prefix}gradient);
      } @else {
        background-image: mkui.escape-svg(mkui.$form-switch-checked-bg-image);
      }
    }
  }
}

.checkbox--inline {
  display: inline-block;
  margin-right: $inline-margin-end;
}

.btn-check {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;

  &[disabled],
  &:disabled {
    + .btn {
      pointer-events: none;
      filter: none;
      opacity: $btn-check-disabled-opacity;
    }
  }
}
