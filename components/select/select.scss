//
// Select component styles
//

@use "sass:map";
@use '../../design-tokens' as mkui;
@use '../form-control' as form-control;
@use '../input-label';
@use '../helper-text' as helper-text;
@use '~choices.js/src/styles/choices.scss' as choices with (
  $choices-selector: 'selectchoices',
  $choices-font-size-lg: mkui.$input-font-size-lg,
  $choices-font-size-md: mkui.$input-font-size,
  $choices-font-size-sm: mkui.$input-font-size-sm,
  $choices-guttering: 0,
  $choices-border-radius: mkui.$input-border-radius,
  $choices-border-radius-item: 1.1rem,
  $choices-bg-color: mkui.$input-bg,
  $choices-bg-color-disabled: mkui.$input-disabled-bg,
  $choices-bg-color-dropdown: mkui.$input-bg,
  $choices-text-color: mkui.$input-color,
  $choices-keyline-color: mkui.$input-border-color,
  $choices-primary-color: mkui.$primary,
  $choices-disabled-color: null,
  $choices-highlight-color: mkui.$primary,
  $choices-button-dimension: 8px,
  $choices-button-offset: 8px,
);

$padding-y:             mkui.$input-padding-y !default;
$padding-x:             mkui.$input-padding-x !default;
$font-family:           mkui.$input-font-family !default;
$font-size:             mkui.$input-font-size !default;
$indicator-padding:     $padding-x * 3 !default; // Extra padding for background-image
$font-weight:           mkui.$input-font-weight !default;
$line-height:           mkui.$input-line-height !default;
$color:                 mkui.$input-color !default;
$bg:                    mkui.$input-bg !default;
$disabled-color:        null !default;
$disabled-bg:           mkui.$gray-200 !default;
$disabled-border-color: mkui.$input-disabled-border-color !default;
$bg-position:           right $padding-x center !default;
$bg-size:               16px 12px !default; // In pixels because image dimensions
$indicator-color:       mkui.$gray-800 !default;
$indicator:             url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='none' stroke='#{$indicator-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/></svg>") !default;

$feedback-icon-padding-end: $padding-x * 2.5 + $indicator-padding !default;
$feedback-icon-position:    center right $indicator-padding !default;
$feedback-icon-size:        mkui.$input-height-inner-half mkui.$input-height-inner-half !default;

$border-width:        mkui.$input-border-width !default;
$border-color:        mkui.$input-border-color !default;
$border-radius:       mkui.$border-radius !default;
$box-shadow:          mkui.$box-shadow-inset !default;

$focus-border-color:  mkui.$input-focus-border-color !default;
$focus-width:         mkui.$input-focus-width !default;
$focus-box-shadow:    0 0 0 $focus-width mkui.$input-btn-focus-color !default;

$padding-y-sm:        mkui.$input-padding-y-sm !default;
$padding-x-sm:        mkui.$input-padding-x-sm !default;
$font-size-sm:        mkui.$input-font-size-sm !default;

$padding-y-lg:        mkui.$input-padding-y-lg !default;
$padding-x-lg:        mkui.$input-padding-x-lg !default;
$font-size-lg:        mkui.$input-font-size-lg !default;

$transition:          mkui.$input-transition !default;

.selectchoices__inner {
  display: block;
  width: 100%;
  padding: $padding-y $indicator-padding $padding-y $padding-x;
  -moz-padding-start: subtract($padding-x, 3px);
  font-family: $font-family;
  @include mkui.font-size($font-size);
  font-weight: $font-weight;
  line-height: $line-height;
  color: $color;
  border: $border-width solid $border-color;
  @include mkui.border-radius($border-radius, 0);
  @include mkui.box-shadow($box-shadow);
  @include mkui.transition($transition);
  appearance: none;

  min-height: 0;
  .is-focused &,
  .is-open & {
    border-color: mkui.$input-focus-border-color;
    outline: 0;
    @if mkui.$enable-shadows {
      @include mkui.box-shadow(mkui.$input-box-shadow, mkui.$input-focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: mkui.$input-focus-box-shadow;
    }
  }

  &:focus {
    border-color: $focus-border-color;
    outline: 0;
    @if mkui.$enable-shadows {
      @include mkui.box-shadow($box-shadow, $focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: $focus-box-shadow;
    }
  }

  &[multiple],
  &[size]:not([size="1"]) {
    padding-right: $padding-x;
    background-image: none;
  }

  &:disabled {
    color: $disabled-color;
    background-color: $disabled-bg;
    border-color: $disabled-border-color;
  }

  // Remove outline from select box in FF
  &:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 $color;
  }
}

.selectchoices__list--single {
  display: inline-block;
  padding: 0;
  width: 100%;
  [dir='rtl'] & {
    padding-right: 0;
    padding-left: 0;
  }
  .selectchoices__item {
    width: 100%;
  }
}

.selectchoices__list--dropdown {
  z-index: mkui.$zindex-dropdown;
  .selectchoices__item {
    padding: $padding-y $padding-x;
  }
}

.selectchoices__placeholder {
  color: mkui.$input-placeholder-color;
  opacity: 1;
}

.selectchoices--sm {
  .selectchoices__inner {
    padding-top: $padding-y-sm;
    padding-bottom: $padding-y-sm;
    padding-left: $padding-x-sm;
    @include mkui.font-size($font-size-sm);
  }
  .selectchoices__list--dropdown .selectchoices__item {
    padding: $padding-y-sm $padding-x-sm;
    @include mkui.font-size($font-size-sm);
  }
}

.selectchoices--lg {
  .selectchoices__inner {
    padding-top: $padding-y-lg;
    padding-bottom: $padding-y-lg;
    padding-left: $padding-x-lg;
    @include mkui.font-size($font-size-lg);
  }
  .selectchoices__list--dropdown .selectchoices__item {
    padding: $padding-y-lg $padding-x-lg;
    @include mkui.font-size($font-size-lg);
  }
}

//
// Form control styles
//

.form-control {
  &.form-control--floating-label {
    .selectchoices__inner {
      height: form-control.$height;
      line-height: form-control.$line-height;
      padding-top: form-control.$input-padding-t;
      padding-bottom: form-control.$input-padding-b;
    }
    > .selectchoices {
      ~ label {
        opacity: form-control.$label-opacity;
        transform: form-control.$label-transform;
      }
    }
  }
}

//
// Helper text styles
//

@each $state, $data in helper-text.$helper-text-states {
  $color: map.get($data, "color");
  $icon: map.get($data, "icon");
  .selectchoices__inner {
    @include helper-text.state-selector($state) {
      border-color: $color;

      @if mkui.$enable-validation-icons {
        &:not([multiple]):not([size]),
        &:not([multiple])[size="1"] {
          padding-right: $feedback-icon-padding-end;
          background-image: mkui.escape-svg($icon);
          background-repeat: no-repeat;
          background-position: $feedback-icon-position;
          background-size: mkui.$input-height-inner-half mkui.$input-height-inner-half;
        }
      }

      &:focus {
        border-color: $color;
        box-shadow: $focus-box-shadow;
      }
    }
  }
}
