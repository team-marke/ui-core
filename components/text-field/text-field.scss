//
// Text Field component styles
//

@use "sass:map";
@use '../../design-tokens' as mkui;
@use '../form-control' as form-control;
@use '../input-label';
@use '../helper-text' as helper-text;

$padding-y:                       mkui.$input-btn-padding-y !default;
$padding-x:                       mkui.$input-btn-padding-x !default;
$font-family:                     mkui.$input-btn-font-family !default;
$font-size:                       mkui.$input-btn-font-size !default;
$font-weight:                     mkui.$font-weight-base !default;
$line-height:                     mkui.$input-btn-line-height !default;

$padding-y-sm:                    mkui.$input-btn-padding-y-sm !default;
$padding-x-sm:                    mkui.$input-btn-padding-x-sm !default;
$font-size-sm:                    mkui.$input-btn-font-size-sm !default;

$padding-y-lg:                    mkui.$input-btn-padding-y-lg !default;
$padding-x-lg:                    mkui.$input-btn-padding-x-lg !default;
$font-size-lg:                    mkui.$input-btn-font-size-lg !default;

$bg:                              mkui.$body-bg !default;
$disabled-bg:                     mkui.$gray-200 !default;
$disabled-border-color:           null !default;

$color:                           mkui.$body-color !default;
$border-color:                    mkui.$gray-400 !default;
$border-width:                    mkui.$input-btn-border-width !default;
$box-shadow:                      mkui.$box-shadow-inset !default;

$border-radius:                   mkui.$border-radius !default;
$border-radius-sm:                mkui.$border-radius-sm !default;
$border-radius-lg:                mkui.$border-radius-lg !default;

$focus-bg:                        $bg !default;
$focus-border-color:              mkui.tint-color(mkui.$component-active-bg, 50%) !default;
$focus-color:                     $color !default;
$focus-width:                     mkui.$input-btn-focus-width !default;
$focus-box-shadow:                mkui.$input-btn-focus-box-shadow !default;

$placeholder-color:               mkui.$gray-600 !default;
$plaintext-color:                 mkui.$body-color !default;

$height-border:                   $border-width * 2 !default;

$height-inner:                    mkui.add($line-height * 1em, $padding-y * 2) !default;
$height-inner-half:               mkui.add($line-height * .5em, $padding-y) !default;
$height-inner-quarter:            mkui.add($line-height * .25em, $padding-y * .5) !default;

$height:                          mkui.add($line-height * 1em, mkui.add($padding-y * 2, $height-border, false)) !default;
$height-sm:                       mkui.add($line-height * 1em, mkui.add($padding-y-sm * 2, $height-border, false)) !default;
$height-lg:                       mkui.add($line-height * 1em, mkui.add($padding-y-lg * 2, $height-border, false)) !default;

$transition:                      border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;

$form-color-width:                3rem !default;

.text-field {
  display: block;
  width: 100%;
  padding: $padding-y $padding-x;
  font-family: $font-family;
  @include mkui.font-size($font-size);
  font-weight: $font-weight;
  line-height: $line-height;
  color: $color;
  background-color: $bg;
  background-clip: padding-box;
  border: $border-width solid $border-color;
  appearance: none; // Fix appearance for date inputs in Safari

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @include mkui.border-radius($border-radius, 0);

  @include mkui.box-shadow($box-shadow);
  @include mkui.transition($transition);

  &[type="file"] {
    overflow: hidden; // prevent pseudo element button overlap

    &:not(:disabled):not([readonly]) {
      cursor: pointer;
    }
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  &:focus {
    color: $focus-color;
    background-color: $focus-bg;
    border-color: $focus-border-color;
    outline: 0;
    @if mkui.$enable-shadows {
      @include mkui.box-shadow($box-shadow, $focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: $focus-box-shadow;
    }
  }

  &::-webkit-date-and-time-value {
    height: if(unit($line-height) == "", $line-height * 1em, $line-height);
  }

  // Placeholder
  &::placeholder {
    color: $placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $disabled-bg;
    border-color: $disabled-border-color;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }

  &::file-selector-button {
    padding: $padding-y $padding-x;
    margin: (- $padding-y) (- $padding-x);
    margin-inline-end: $padding-x;
    color: mkui.$form-file-button-color;
    @include mkui.gradient-bg(mkui.$form-file-button-bg);
    pointer-events: none;
    border-color: inherit;
    border-style: solid;
    border-width: 0;
    border-inline-end-width: $border-width;
    border-radius: 0; // stylelint-disable-line property-disallowed-list
    @include mkui.transition(mkui.$btn-transition);
  }

  &:hover:not(:disabled):not([readonly])::file-selector-button {
    background-color: mkui.$form-file-button-hover-bg;
  }

  &::-webkit-file-upload-button {
    padding: $padding-y $padding-x;
    margin: (- $padding-y) (- $padding-x);
    margin-inline-end: $padding-x;
    color: mkui.$form-file-button-color;
    @include mkui.gradient-bg(mkui.$form-file-button-bg);
    pointer-events: none;
    border-color: inherit;
    border-style: solid;
    border-width: 0;
    border-inline-end-width: $border-width;
    border-radius: 0; // stylelint-disable-line property-disallowed-list
    @include mkui.transition(mkui.$btn-transition);
  }

  &:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {
    background-color: mkui.$form-file-button-hover-bg;
  }
}

.text-field-plaintext {
  display: block;
  width: 100%;
  padding: $padding-y 0;
  margin-bottom: 0; // match inputs if this class comes on inputs with default margins
  line-height: $line-height;
  color: $plaintext-color;
  background-color: transparent;
  border: solid transparent;
  border-width: $border-width 0;

  &.text-field--sm,
  &.text-field--lg {
    padding-right: 0;
    padding-left: 0;
  }
}

.text-field--sm {
  min-height: $height-sm;
  padding: $padding-y-sm $padding-x-sm;
  @include mkui.font-size($font-size-sm);
  @include mkui.border-radius($border-radius-sm);

  &::file-selector-button {
    padding: $padding-y-sm $padding-x-sm;
    margin: (- $padding-y-sm) (- $padding-x-sm);
    margin-inline-end: $padding-x-sm;
  }

  &::-webkit-file-upload-button {
    padding: $padding-y-sm $padding-x-sm;
    margin: (- $padding-y-sm) (- $padding-x-sm);
    margin-inline-end: $padding-x-sm;
  }
}

.text-field--lg {
  min-height: $height-lg;
  padding: $padding-y-lg $padding-x-lg;
  @include mkui.font-size($font-size-lg);
  @include mkui.border-radius($border-radius-lg);

  &::file-selector-button {
    padding: $padding-y-lg $padding-x-lg;
    margin: (- $padding-y-lg) (- $padding-x-lg);
    margin-inline-end: $padding-x-lg;
  }

  &::-webkit-file-upload-button {
    padding: $padding-y-lg $padding-x-lg;
    margin: (- $padding-y-lg) (- $padding-x-lg);
    margin-inline-end: $padding-x-lg;
  }
}

textarea {
  &.text-field {
    min-height: $height;
  }

  &.text-field--sm {
    min-height: $height-sm;
  }

  &.text-field--lg {
    min-height: $height-lg;
  }
}

.text-field-color {
  width: mkui.$form-color-width;
  height: auto; // Override fixed browser height
  padding: $padding-y;

  &:not(:disabled):not([readonly]) {
    cursor: pointer;
  }

  &::-moz-color-swatch {
    height: if(unit($line-height) == "", $line-height * 1em, $line-height);
    @include mkui.border-radius($border-radius);
  }

  &::-webkit-color-swatch {
    height: if(unit($line-height) == "", $line-height * 1em, $line-height);
    @include mkui.border-radius($border-radius);
  }
}

//
// Form control styles
//

.form-control {
  &.form-control--floating-label {
    > .text-field {
      height: form-control.$height;
      line-height: form-control.$line-height;
      padding: form-control.$padding-y form-control.$padding-x;
      &::placeholder {
        color: transparent;
      }
      &:focus,
      &:not(:placeholder-shown) {
        padding-top: form-control.$input-padding-t;
        padding-bottom: form-control.$input-padding-b;
      }
      // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped
      &:-webkit-autofill {
        padding-top: form-control.$input-padding-t;
        padding-bottom: form-control.$input-padding-b;
      }
    }
    > .text-field:focus,
    > .text-field:not(:placeholder-shown) {
      ~ label {
        opacity: form-control.$label-opacity;
        transform: form-control.$label-transform;
      }
    }
    // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped
    > .text-field:-webkit-autofill {
      ~ label {
        opacity: form-control.$label-opacity;
        transform: form-control.$label-transform;
      }
    }
  }
}

//
// Helper text styles
//

@each $state, $data in helper-text.$helper-text-states {
  $color: map.get($data, "color");
  $icon: map.get($data, "icon");
  $focus-box-shadow: 0 0 mkui.$input-btn-focus-blur $focus-width rgba($color, mkui.$input-btn-focus-color-opacity);
  .text-field {
    @include helper-text.state-selector($state) {
      border-color: $color;

      @if mkui.$enable-validation-icons {
        padding-right: $height-inner;
        background-image: mkui.escape-svg($icon);
        background-repeat: no-repeat;
        background-position: right $height-inner-quarter center;
        background-size: $height-inner-half $height-inner-half;
      }

      &:focus {
        border-color: $color;
        box-shadow: $focus-box-shadow;
      }
    }
  }

  textarea.text-field {
    @include helper-text.state-selector($state) {
      @if mkui.$enable-validation-icons {
        padding-right: $height-inner;
        background-position: top $height-inner-quarter right $height-inner-quarter;
      }
    }
  }
}
