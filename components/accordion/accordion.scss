//
// Accordion component styles.
//

@use '../../design-tokens' as mkui;

$padding-y:                     1rem !default;
$padding-x:                     1.25rem !default;
$color:                         mkui.$body-color !default;
$bg:                            mkui.$body-bg !default;
$border-width:                  mkui.$border-width !default;
$border-color:                  rgba(mkui.$black, .125) !default;
$border-radius:                 mkui.$border-radius !default;
$inner-border-radius:           subtract($border-radius, $border-width) !default;

$body-padding-y:                $padding-y !default;
$body-padding-x:                $padding-x !default;

$button-padding-y:              $padding-y !default;
$button-padding-x:              $padding-x !default;
$button-color:                  $color !default;
$button-bg:                     $bg !default;
$transition:                    mkui.$btn-transition, border-radius .15s ease !default;
$button-active-bg:              tint-color(mkui.$component-active-bg, 90%) !default;
$button-active-color:           shade-color(mkui.$primary, 10%) !default;

$button-focus-border-color:     mkui.$input-focus-border-color !default;
$button-focus-box-shadow:       mkui.$btn-focus-box-shadow !default;

$icon-width:                    1.25rem !default;
$icon-color:                    $button-color !default;
$icon-active-color:             $button-active-color !default;
$icon-transition:               transform .2s ease-in-out !default;
$icon-transform:                rotate(-180deg) !default;

$button-icon:         url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$icon-color}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !default;
$button-active-icon:  url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$icon-active-color}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !default;

.accordion__button {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  padding: $button-padding-y $button-padding-x;
  @include mkui.font-size(mkui.$font-size-base);
  color: $button-color;
  text-align: left; // Reset button style
  background-color: $button-bg;
  border: 0;
  @include mkui.border-radius(0);
  overflow-anchor: none;
  @include mkui.transition($transition);

  &:not(.collapsed) {
    color: $button-active-color;
    background-color: $button-active-bg;
    box-shadow: inset 0 ($border-width * -1) 0 $border-color;

    &::after {
      background-image: escape-svg($button-active-icon);
      transform: $icon-transform;
    }
  }

  // Accordion icon
  &::after {
    flex-shrink: 0;
    width: $icon-width;
    height: $icon-width;
    margin-left: auto;
    content: "";
    background-image: mkui.escape-svg($button-icon);
    background-repeat: no-repeat;
    background-size: $icon-width;
    @include mkui.transition($icon-transition);
  }

  &:hover {
    z-index: 2;
  }

  &:focus {
    z-index: 3;
    border-color: $button-focus-border-color;
    outline: 0;
    box-shadow: $button-focus-box-shadow;
  }
}

.accordion__header {
  margin-bottom: 0;
}

.accordion__item {
  background-color: $bg;
  border: $border-width solid $border-color;

  &:first-of-type {
    @include mkui.border-top-radius($border-radius);

    .accordion__button {
      @include mkui.border-top-radius($inner-border-radius);
    }
  }

  &:not(:first-of-type) {
    border-top: 0;
  }

  // Only set a border-radius on the last item if the accordion is collapsed
  &:last-of-type {
    @include mkui.border-bottom-radius($border-radius);

    .accordion__button {
      &.collapsed {
        @include mkui.border-bottom-radius($inner-border-radius);
      }
    }

    .accordion__collapse {
      @include mkui.border-bottom-radius($border-radius);
    }
  }
}

.accordion__body {
  padding: $body-padding-y $body-padding-x;
}


// Flush accordion items
//
// Remove borders and border-radius to keep accordion items edge-to-edge.

.accordion--flush {
  .accordion__collapse {
    border-width: 0;
  }

  .accordion__item {
    border-right: 0;
    border-left: 0;
    @include mkui.border-radius(0);

    &:first-child { border-top: 0; }
    &:last-child { border-bottom: 0; }

    .accordion__button {
      @include mkui.border-radius(0);
    }
  }
}